# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-08 19:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CREATE_TIMESTAMP', models.DateTimeField(auto_now_add=True, null=True)),
                ('UPDATE_TIMESTAMP', models.DateTimeField(auto_now=True, null=True)),
                ('code', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'PERMISSION',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CREATE_TIMESTAMP', models.DateTimeField(auto_now_add=True, null=True)),
                ('UPDATE_TIMESTAMP', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'ROLE',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CREATE_TIMESTAMP', models.DateTimeField(auto_now_add=True, null=True)),
                ('UPDATE_TIMESTAMP', models.DateTimeField(auto_now=True, null=True)),
                ('permissionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='api.Permission')),
                ('roleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rolePermissionRoles', to='api.Role')),
            ],
            options={
                'db_table': 'ROLE_PERMISSION',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CREATE_TIMESTAMP', models.DateTimeField(auto_now_add=True, null=True)),
                ('UPDATE_TIMESTAMP', models.DateTimeField(auto_now=True, null=True)),
                ('givenName', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
                ('userId', models.CharField(blank=True, max_length=500, null=True)),
                ('guid', models.CharField(blank=True, max_length=100, null=True)),
                ('authorizationDirectory', models.CharField(blank=True, max_length=100, null=True)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'USER',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CREATE_TIMESTAMP', models.DateTimeField(auto_now_add=True, null=True)),
                ('UPDATE_TIMESTAMP', models.DateTimeField(auto_now=True, null=True)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('roleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userRoles', to='api.Role')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='api.User')),
            ],
            options={
                'db_table': 'USER_ROLE',
            },
        ),
    ]
